CREATE SEQUENCE TB_USUARIO_SEQ
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;

CREATE SEQUENCE TB_SERVICO_SEQ
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;

CREATE SEQUENCE TB_FEEDBACK_SEQ
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;

CREATE SEQUENCE TB_PROFISSIONAL_SEQ
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;


CREATE SEQUENCE TB_AGENDAMENTO_SEQ
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;


CREATE TABLE TB_USUARIO (
    id INTEGER DEFAULT TB_USUARIO_SEQ.NEXTVAL NOT NULL PRIMARY KEY,
    nome VARCHAR2(100) NOT NULL,
    email VARCHAR2(100) NOT NULL,
    senha VARCHAR2(300) NOT NULL,
    cpf VARCHAR2(11) NOT NULL UNIQUE,
    data_nascimento DATE
);

CREATE TABLE TB_PROFISSIONAL (
    id INTEGER DEFAULT TB_PROFISSIONAL_SEQ.NEXTVAL NOT NULL PRIMARY KEY,
    nome VARCHAR2(100) NOT NULL,
    especialidade VARCHAR2(10),
    preco_plano_anual NUMBER(5,2),
    preco_plano_mensal NUMBER(2,2)

);

CREATE TABLE TB_SERVICO (
    id INTEGER DEFAULT TB_SERVICO_SEQ.NEXTVAL NOT NULL PRIMARY KEY,
    descricao VARCHAR2(200),
    preco NUMBER(5,2),
    profissional_id INTEGER,
    CONSTRAINT fk_servico_profissional FOREIGN KEY (profissional_id) REFERENCES TB_PROFISSIONAL(ID)
);

CREATE TABLE TB_AGENDAMENTO (
    id INTEGER DEFAULT TB_AGENDAMENTO_SEQ.NEXTVAL NOT NULL PRIMARY KEY,
    data_hora TIMESTAMP,
    usuario_id INTEGER,
    servico_id INTEGER,
    CONSTRAINT fk_agendamento_usuario FOREIGN KEY (usuario_id) REFERENCES TB_USUARIO(ID),
    CONSTRAINT fk_agendamento_servico FOREIGN KEY (servico_id) REFERENCES TB_SERVICO(ID)
);

CREATE TABLE TB_FEEDBACK (
    id INTEGER DEFAULT TB_FEEDBACK_SEQ.NEXTVAL NOT NULL PRIMARY KEY,
    comentario VARCHAR2(200),
    agendamento_id INTEGER,
    CONSTRAINT fk_feedback_agendamento FOREIGN KEY (agendamento_id) REFERENCES TB_AGENDAMENTO(ID)

);